<?xml version="1.0" encoding="UTF-8"?> 
<configuration debug="true"> 
	
	<springProperty name="LOG_PATH" 	      scope="context" source="logging.file.path"/> 
	<springProperty name="LOG_MAX_SIZE" 	  scope="context" source="logging.file.max-size"/> 
	<springProperty name="LOG_MAX_HISTORY"    scope="context" source="logging.file.max-history"/> 
	<springProperty name="SLACK_WEBHOOK_URI"  scope="context" source="logging.slack.webhook-uri"/> 
	
	
	<property name="LOG_FILE_NAME" value="DAYILY_LOG"/> 
    
    <property name="LOG_PATTERN_HIGHLIGHTED"
              value="%highlight(%-5level) %d{yy-MM-dd HH:mm:ss} [%logger{0}:%line] - %msg%n"/> 
    <property name="LOG_PATTERN"
              value="%-5level %d{yy-MM-dd HH:mm:ss} [%logger{0}:%line] - %msg%n"/> 

    
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender"> 
		 <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN_HIGHLIGHTED}</pattern>
        </encoder>
	</appender> 
	          
	<appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
		<file>${LOG_PATH}/WAS.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder> 
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/was/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
                <maxFileSize>${LOG_MAX_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy> 
            <maxHistory>${LOG_MAX_HISTORY}</maxHistory>
        </rollingPolicy>
	</appender> 
	
	<!-- SQL Log Appender -->
	<appender name="SQLLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/SQL.log</file>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder> 
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/sql/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log.zip</fileNamePattern>
			  <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
                <maxFileSize>${LOG_MAX_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy> 
            <maxHistory>${LOG_MAX_HISTORY}</maxHistory>
		</rollingPolicy>
	</appender>
	<!-- End log appender -->	
	
	<!-- SLACK 추가 시작 -->
	<appender name="SLACK" class="com.github.maricn.logback.SlackAppender">
        <webhookUri>${SLACK_WEBHOOK_URI}</webhookUri>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %msg %n</pattern>
        </layout>
        <username>Cake-Server-log</username>
        <!-- <iconEmoji>:stuck_out_tongue_winking_eye:</iconEmoji> -->
        <colorCoding>true</colorCoding>
    </appender>
	
	<appender name="ASYNC_SLACK" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SLACK"/>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>
	<!-- SLACK 추가 끝 -->
	
    <logger name="java.sql" 	   	   level="OFF"   additivity="false"/> 
	<logger name="jdbc.connection" 	   level="OFF"   additivity="false"/> 
    <logger name="jdbc.resultset"  	   level="OFF"   additivity="false"/> 
	<logger name="jdbc.audit" 	   	   level="OFF"   additivity="false"/> 
	<logger name="jdbc.sqlonly"    	   level="OFF"   additivity="false"/> 
	<logger name="jdbc.resultsettable" level="OFF"   additivity="false" />
	<logger name="jdbc.sqltiming" 	   level="DEBUG" additivity="false"> 
		<!-- <appender-ref ref="ROLLING" /> -->
		<!--// SQL 로그 분리시킬경우//-->
		<appender-ref ref="SQLLOG" /> 
    </logger> 
	
	<root level="info"> 
		<appender-ref ref="STDOUT"/> 
		<appender-ref ref="ROLLING"/> 
		<!-- 테스트 완료 
		<appender-ref ref="ASYNC_SLACK"/>  
		-->
	</root> 
	
</configuration>
